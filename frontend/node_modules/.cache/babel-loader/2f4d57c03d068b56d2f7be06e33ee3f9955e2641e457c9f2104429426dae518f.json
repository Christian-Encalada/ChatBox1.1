{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chris\\\\Desktop\\\\ChatBox\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { io } from 'socket.io-client';\nimport { useState, useEffect } from 'react';\nimport { LiMensaje, UlMensajes } from './ui-components';\nimport { initializeApp } from \"firebase/app\";\nimport 'firebase/messaging';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3000');\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBwBEW-vmdytwra50NwyHaQhYCqg4s_yV4\",\n  authDomain: \"chatbox-98fbb.firebaseapp.com\",\n  projectId: \"chatbox-98fbb\",\n  storageBucket: \"chatbox-98fbb.appspot.com\",\n  messagingSenderId: \"314247152483\",\n  appId: \"1:314247152483:web:ad1e17c335f01bb6da4956\"\n};\nconst app = initializeApp(firebaseConfig);\nfunction App() {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [nuevoMensaje, setNuevoMensaje] = useState('');\n  const [nombreUsuario, setNombreUsuario] = useState('');\n  const [mensajes, setMensajes] = useState([]);\n  useEffect(() => {\n    socket.on('connectado', () => setIsConnected(true));\n    socket.on('enviar_mensaje', data => {\n      setMensajes(mensajes => [...mensajes, data]);\n    });\n    return () => {\n      socket.off('connectado');\n      socket.off('enviar_mensaje');\n    };\n  }, []);\n  const enviarMensaje = () => {\n    socket.emit('enviar_mensaje', {\n      usuario: nombreUsuario,\n      // Utiliza el nombre de usuario en lugar de socket.id\n      mensaje: nuevoMensaje\n    });\n  };\n  const unirseAlChat = () => {\n    // Cuando el usuario se une al chat, envía su nombre al servidor\n    socket.emit('unirse_al_chat', nombreUsuario);\n    setIsConnected(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: isConnected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"SI ESTAS CONECTADO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(UlMensajes, {\n        children: mensajes.map((mensaje, index) => /*#__PURE__*/_jsxDEV(LiMensaje, {\n          children: [mensaje.usuario, \": \", mensaje.mensaje]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setNuevoMensaje(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: enviarMensaje,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"NO ESTAS CONECTADO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ingrese su nombre\",\n        onChange: e => setNombreUsuario(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: unirseAlChat,\n        children: \"Unirse al chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"d9yXcdRAE1d9PdYZQkI6f75Xkm0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useState","useEffect","LiMensaje","UlMensajes","initializeApp","socket","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","App","isConnected","setIsConnected","nuevoMensaje","setNuevoMensaje","nombreUsuario","setNombreUsuario","mensajes","setMensajes","on","data","off","enviarMensaje","emit","usuario","mensaje","unirseAlChat","map","index","e","target","value"],"sources":["C:/Users/Chris/Desktop/ChatBox/frontend/src/App.js"],"sourcesContent":["import './App.css';\r\nimport { io } from 'socket.io-client';\r\nimport { useState, useEffect } from 'react';\r\nimport { LiMensaje, UlMensajes } from './ui-components';\r\nimport { initializeApp } from \"firebase/app\";\r\nimport 'firebase/messaging';\r\n\r\nconst socket = io('http://localhost:3000');\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBwBEW-vmdytwra50NwyHaQhYCqg4s_yV4\",\r\n  authDomain: \"chatbox-98fbb.firebaseapp.com\",\r\n  projectId: \"chatbox-98fbb\",\r\n  storageBucket: \"chatbox-98fbb.appspot.com\",\r\n  messagingSenderId: \"314247152483\",\r\n  appId: \"1:314247152483:web:ad1e17c335f01bb6da4956\"\r\n};\r\n\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n\r\nfunction App() {\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [nuevoMensaje, setNuevoMensaje] = useState('');\r\n  const [nombreUsuario, setNombreUsuario] = useState('');\r\n  const [mensajes, setMensajes] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    socket.on('connectado', () => setIsConnected(true));\r\n\r\n    socket.on('enviar_mensaje', (data) => {\r\n      setMensajes(mensajes => [...mensajes, data]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('connectado');\r\n      socket.off('enviar_mensaje');\r\n    }\r\n  }, []);\r\n\r\n  const enviarMensaje = () => {\r\n    socket.emit('enviar_mensaje', {\r\n      usuario: nombreUsuario, // Utiliza el nombre de usuario en lugar de socket.id\r\n      mensaje: nuevoMensaje\r\n    });\r\n  }\r\n\r\n  const unirseAlChat = () => {\r\n    // Cuando el usuario se une al chat, envía su nombre al servidor\r\n    socket.emit('unirse_al_chat', nombreUsuario);\r\n    setIsConnected(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {isConnected ? (\r\n        <>\r\n          <h2>SI ESTAS CONECTADO</h2>\r\n          <UlMensajes>\r\n            {mensajes.map((mensaje, index) => (\r\n              <LiMensaje key={index}>{mensaje.usuario}: {mensaje.mensaje}</LiMensaje>\r\n            ))}\r\n          </UlMensajes>\r\n          <input\r\n            type=\"text\"\r\n            onChange={e => setNuevoMensaje(e.target.value)}\r\n          />\r\n          <button onClick={enviarMensaje}>Enviar</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h2>NO ESTAS CONECTADO</h2>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Ingrese su nombre\"\r\n            onChange={e => setNombreUsuario(e.target.value)}\r\n          />\r\n          <button onClick={unirseAlChat}>Unirse al chat</button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}