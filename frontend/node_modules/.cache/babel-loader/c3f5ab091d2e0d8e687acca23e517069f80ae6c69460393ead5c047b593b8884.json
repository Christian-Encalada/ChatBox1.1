{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chris\\\\Desktop\\\\ChatBox\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/* global firebase */\nimport './App.css';\nimport { io } from 'socket.io-client';\nimport { useState, useEffect } from 'react';\nimport { LiMensaje, UlMensajes } from './ui-components';\nimport { initializeApp } from 'firebase/app';\nimport { getMessaging, getToken, onMessage } from 'firebase/messaging';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBwBEW-vmdytwra50NwyHaQhYCqg4s_yV4\",\n  authDomain: \"chatbox-98fbb.firebaseapp.com\",\n  projectId: \"chatbox-98fbb\",\n  storageBucket: \"chatbox-98fbb.appspot.com\",\n  messagingSenderId: \"314247152483\",\n  appId: \"1:314247152483:web:ad1e17c335f01bb6da4956\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst messaging = getMessaging(firebaseApp);\n\n// Solicitar permiso de notificación al cargar la aplicación\nmessaging.requestPermission().then(() => {\n  console.log('Permiso de notificación concedido');\n  return getToken(messaging);\n}).then(token => {\n  console.log('Token FCM:', token);\n}).catch(error => {\n  console.error('Error al solicitar permiso de notificación:', error);\n});\n\n// Manejar las notificaciones entrantes\nonMessage(messaging, payload => {\n  console.log('Notificación recibida:', payload);\n  // Puedes agregar lógica para mostrar la notificación al usuario aquí\n});\n\nconst socket = io('http://localhost:3000');\nfunction App() {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [nuevoMensaje, setNuevoMensaje] = useState('');\n  const [nombreUsuario, setNombreUsuario] = useState('');\n  const [mensajes, setMensajes] = useState([]);\n  useEffect(() => {\n    socket.on('connectado', () => setIsConnected(true));\n    socket.on('enviar_mensaje', data => {\n      setMensajes(mensajes => [...mensajes, data]);\n    });\n    return () => {\n      socket.off('connectado');\n      socket.off('enviar_mensaje');\n    };\n  }, []);\n  const enviarMensaje = () => {\n    socket.emit('enviar_mensaje', {\n      usuario: nombreUsuario,\n      mensaje: nuevoMensaje\n    });\n\n    // Enviar notificación usando FCM\n    messaging.getToken().then(token => {\n      const message = {\n        notification: {\n          title: 'Nuevo Mensaje',\n          body: `${nombreUsuario}: ${nuevoMensaje}`\n        },\n        token: token\n      };\n      return firebase.messaging().send(message);\n    }).catch(error => {\n      console.error('Error al enviar la notificación:', error);\n    });\n  };\n  const unirseAlChat = () => {\n    // Cuando el usuario se une al chat, envía su nombre al servidor\n    socket.emit('unirse_al_chat', nombreUsuario);\n    setIsConnected(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: isConnected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"SI ESTAS CONECTADO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(UlMensajes, {\n        children: mensajes.map((mensaje, index) => /*#__PURE__*/_jsxDEV(LiMensaje, {\n          children: [mensaje.usuario, \": \", mensaje.mensaje]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setNuevoMensaje(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: enviarMensaje,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"NO ESTAS CONECTADO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ingrese su nombre\",\n        onChange: e => setNombreUsuario(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: unirseAlChat,\n        children: \"Unirse al chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"d9yXcdRAE1d9PdYZQkI6f75Xkm0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useState","useEffect","LiMensaje","UlMensajes","initializeApp","getMessaging","getToken","onMessage","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","messaging","requestPermission","then","console","log","token","catch","error","payload","socket","App","isConnected","setIsConnected","nuevoMensaje","setNuevoMensaje","nombreUsuario","setNombreUsuario","mensajes","setMensajes","on","data","off","enviarMensaje","emit","usuario","mensaje","message","notification","title","body","firebase","send","unirseAlChat","map","index","e","target","value"],"sources":["C:/Users/Chris/Desktop/ChatBox/frontend/src/App.js"],"sourcesContent":["/* global firebase */\r\nimport './App.css';\r\nimport { io } from 'socket.io-client';\r\nimport { useState, useEffect } from 'react';\r\nimport { LiMensaje, UlMensajes } from './ui-components';\r\n\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getMessaging, getToken, onMessage } from 'firebase/messaging';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBwBEW-vmdytwra50NwyHaQhYCqg4s_yV4\",\r\n  authDomain: \"chatbox-98fbb.firebaseapp.com\",\r\n  projectId: \"chatbox-98fbb\",\r\n  storageBucket: \"chatbox-98fbb.appspot.com\",\r\n  messagingSenderId: \"314247152483\",\r\n  appId: \"1:314247152483:web:ad1e17c335f01bb6da4956\"\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nconst messaging = getMessaging(firebaseApp);\r\n\r\n// Solicitar permiso de notificación al cargar la aplicación\r\nmessaging.requestPermission().then(() => {\r\n  console.log('Permiso de notificación concedido');\r\n  return getToken(messaging);\r\n}).then((token) => {\r\n  console.log('Token FCM:', token);\r\n}).catch((error) => {\r\n  console.error('Error al solicitar permiso de notificación:', error);\r\n});\r\n\r\n// Manejar las notificaciones entrantes\r\nonMessage(messaging, (payload) => {\r\n  console.log('Notificación recibida:', payload);\r\n  // Puedes agregar lógica para mostrar la notificación al usuario aquí\r\n});\r\n\r\n\r\nconst socket = io('http://localhost:3000');\r\n\r\nfunction App() {\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [nuevoMensaje, setNuevoMensaje] = useState('');\r\n  const [nombreUsuario, setNombreUsuario] = useState('');\r\n  const [mensajes, setMensajes] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    socket.on('connectado', () => setIsConnected(true));\r\n\r\n    socket.on('enviar_mensaje', (data) => {\r\n      setMensajes(mensajes => [...mensajes, data]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('connectado');\r\n      socket.off('enviar_mensaje');\r\n    }\r\n  }, []);\r\n\r\n  const enviarMensaje = () => {\r\n    socket.emit('enviar_mensaje', {\r\n      usuario: nombreUsuario,\r\n      mensaje: nuevoMensaje,\r\n    });\r\n  \r\n    // Enviar notificación usando FCM\r\n    messaging.getToken().then((token) => {\r\n      const message = {\r\n        notification: {\r\n          title: 'Nuevo Mensaje',\r\n          body: `${nombreUsuario}: ${nuevoMensaje}`,\r\n        },\r\n        token: token,\r\n      };\r\n  \r\n      return firebase.messaging().send(message);\r\n    }).catch((error) => {\r\n      console.error('Error al enviar la notificación:', error);\r\n    });\r\n  };\r\n\r\n  const unirseAlChat = () => {\r\n    // Cuando el usuario se une al chat, envía su nombre al servidor\r\n    socket.emit('unirse_al_chat', nombreUsuario);\r\n    setIsConnected(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {isConnected ? (\r\n        <>\r\n          <h2>SI ESTAS CONECTADO</h2>\r\n          <UlMensajes>\r\n            {mensajes.map((mensaje, index) => (\r\n              <LiMensaje key={index}>{mensaje.usuario}: {mensaje.mensaje}</LiMensaje>\r\n            ))}\r\n          </UlMensajes>\r\n          <input\r\n            type=\"text\"\r\n            onChange={e => setNuevoMensaje(e.target.value)}\r\n          />\r\n          <button onClick={enviarMensaje}>Enviar</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h2>NO ESTAS CONECTADO</h2>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Ingrese su nombre\"\r\n            onChange={e => setNombreUsuario(e.target.value)}\r\n          />\r\n          <button onClick={unirseAlChat}>Unirse al chat</button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}